{
  "Resources": {
    "welcomeLambdaIdServiceRoleE4D154F8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/welcomeLambdaId/ServiceRole/Resource"
      }
    },
    "welcomeLambdaId8A492FF2": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import json\n\n\ndef handler(event, context):\n    print('request: {}'.format(json.dumps(event)))\n\n    return {\n        'statusCode': 200,\n        'headers': {\n            'Content-Type': 'text/plain'\n        },\n        'body': f\"Hello, Mystique! You have hit {event['path']}\"\n    }\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "welcomeLambdaIdServiceRoleE4D154F8",
            "Arn"
          ]
        },
        "Runtime": "python3.7"
      },
      "DependsOn": [
        "welcomeLambdaIdServiceRoleE4D154F8"
      ],
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/welcomeLambdaId/Resource"
      }
    },
    "hitCounterHits894A5A42": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "path",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "path",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/hitCounter/Hits/Resource"
      }
    },
    "hitCounterrequestProcessorIdServiceRoleDEE396F4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/hitCounter/requestProcessorId/ServiceRole/Resource"
      }
    },
    "hitCounterrequestProcessorIdServiceRoleDefaultPolicy04D8BA3F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "hitCounterHits894A5A42",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "welcomeLambdaId8A492FF2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "hitCounterrequestProcessorIdServiceRoleDefaultPolicy04D8BA3F",
        "Roles": [
          {
            "Ref": "hitCounterrequestProcessorIdServiceRoleDEE396F4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/hitCounter/requestProcessorId/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "hitCounterrequestProcessorId0F97C1A3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import json\nimport os\n\nimport boto3\n\nddb = boto3.resource('dynamodb')\ntable = ddb.Table(os.environ['HITS_TABLE_NAME'])\n_lambda = boto3.client('lambda')\n\n\ndef handler(event, context):\n\n    print(f\"IncomingRequest:{json.dumps(event)}\")\n\n    # Increment DDB table for the new request\n    table.update_item(\n        Key={'path': event['path']},\n        UpdateExpression='ADD hits :incr',\n        ExpressionAttributeValues={':incr': 1}\n    )\n\n    # Pass on the request, Trigger the 'DOWNSTREAM' LAMBDA\n    resp = _lambda.invoke(\n        FunctionName=os.environ['DOWNSTREAM_FUNCTION_NAME'],\n        Payload=json.dumps(event),\n    )\n\n    body = resp['Payload'].read()\n\n    print(f\"Downstream Response:{body}\")\n    return json.loads(body)\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "hitCounterrequestProcessorIdServiceRoleDEE396F4",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Environment": {
          "Variables": {
            "DOWNSTREAM_FUNCTION_NAME": {
              "Ref": "welcomeLambdaId8A492FF2"
            },
            "HITS_TABLE_NAME": {
              "Ref": "hitCounterHits894A5A42"
            }
          }
        }
      },
      "DependsOn": [
        "hitCounterrequestProcessorIdServiceRoleDefaultPolicy04D8BA3F",
        "hitCounterrequestProcessorIdServiceRoleDEE396F4"
      ],
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/hitCounter/requestProcessorId/Resource"
      }
    },
    "EndpointEEF1FD8F": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Endpoint"
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/Endpoint/Resource"
      }
    },
    "EndpointDeployment318525DA7433fce19decb0a2fb54f075e378703f": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "EndpointEEF1FD8F"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "EndpointproxyANYC09721C5",
        "Endpointproxy39E2174E",
        "EndpointANY485C938B"
      ],
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/Endpoint/Deployment/Resource"
      }
    },
    "EndpointDeploymentStageprodB78BEEA0": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "EndpointEEF1FD8F"
        },
        "DeploymentId": {
          "Ref": "EndpointDeployment318525DA7433fce19decb0a2fb54f075e378703f"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/Endpoint/DeploymentStage.prod/Resource"
      }
    },
    "EndpointCloudWatchRoleC3C64E0F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/Endpoint/CloudWatchRole/Resource"
      }
    },
    "EndpointAccountB8304247": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "EndpointCloudWatchRoleC3C64E0F",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "EndpointEEF1FD8F"
      ],
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/Endpoint/Account"
      }
    },
    "Endpointproxy39E2174E": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "EndpointEEF1FD8F",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "EndpointEEF1FD8F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/Endpoint/Default/{proxy+}/Resource"
      }
    },
    "EndpointproxyANYApiPermissionserverlesshitcounterEndpoint4FA67E68ANYproxy0C4DC139": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hitCounterrequestProcessorId0F97C1A3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "EndpointEEF1FD8F"
              },
              "/",
              {
                "Ref": "EndpointDeploymentStageprodB78BEEA0"
              },
              "/*/{proxy+}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/Endpoint/Default/{proxy+}/ANY/ApiPermission.serverlesshitcounterEndpoint4FA67E68.ANY..{proxy+}"
      }
    },
    "EndpointproxyANYApiPermissionTestserverlesshitcounterEndpoint4FA67E68ANYproxy7349BF43": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hitCounterrequestProcessorId0F97C1A3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "EndpointEEF1FD8F"
              },
              "/test-invoke-stage/*/{proxy+}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/Endpoint/Default/{proxy+}/ANY/ApiPermission.Test.serverlesshitcounterEndpoint4FA67E68.ANY..{proxy+}"
      }
    },
    "EndpointproxyANYC09721C5": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "Endpointproxy39E2174E"
        },
        "RestApiId": {
          "Ref": "EndpointEEF1FD8F"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "hitCounterrequestProcessorId0F97C1A3",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/Endpoint/Default/{proxy+}/ANY/Resource"
      }
    },
    "EndpointANYApiPermissionserverlesshitcounterEndpoint4FA67E68ANYC2E7E783": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hitCounterrequestProcessorId0F97C1A3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "EndpointEEF1FD8F"
              },
              "/",
              {
                "Ref": "EndpointDeploymentStageprodB78BEEA0"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/Endpoint/Default/ANY/ApiPermission.serverlesshitcounterEndpoint4FA67E68.ANY.."
      }
    },
    "EndpointANYApiPermissionTestserverlesshitcounterEndpoint4FA67E68ANY629AA057": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "hitCounterrequestProcessorId0F97C1A3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "EndpointEEF1FD8F"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/Endpoint/Default/ANY/ApiPermission.Test.serverlesshitcounterEndpoint4FA67E68.ANY.."
      }
    },
    "EndpointANY485C938B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "EndpointEEF1FD8F",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "EndpointEEF1FD8F"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "hitCounterrequestProcessorId0F97C1A3",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "serverless-hit-counter/Endpoint/Default/ANY/Resource"
      }
    }
  },
  "Outputs": {
    "Endpoint8024A810": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "EndpointEEF1FD8F"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "EndpointDeploymentStageprodB78BEEA0"
            },
            "/"
          ]
        ]
      }
    }
  }
}